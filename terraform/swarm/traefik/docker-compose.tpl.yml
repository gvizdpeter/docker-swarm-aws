version: "3.7"

services:
  traefik:
    image: traefik:v2.4
    command:
      - --configFile=/config.yml
    configs:
      - source: ${traefik_config}
        target: /config.yml
      - source: ${traefik_http_config}
        target: /http_config.yml
    networks:
      - traefik-public
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${shared_volume_mountpoint}/traefik:/var/log
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - "traefik.http.routers.api.rule=Host(`traefik.${swarm_domain}`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.routers.api.middlewares=adminBasicAuth@file"
        - "traefik.http.services.api.loadbalancer.server.port=8080"
        - "traefik.http.routers.prometheus.rule=Host(`traefik.${swarm_domain}`) && (PathPrefix(`/metrics`))"
        - "traefik.http.routers.prometheus.service=prometheus@internal"
        - "traefik.http.routers.prometheus.middlewares=adminBasicAuth@file"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9000"

configs:
  ${traefik_config}:
    external: true
  ${traefik_http_config}:
    external: true

networks:
  traefik-public:
    external: true